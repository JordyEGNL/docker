services:
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:10.10.6
    user: 1000:1000
    group_add:
      - "109" # Change this to match your "render" host group id
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - ${MEDIA_ROOT}:/data
    ports:
      - 8096:8096
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    labels:
      traefik.enable: true
      traefik.http.routers.jellyfin.entryPoints: websecure
      traefik.http.services.jellyfin.loadbalancer.server.port: 8096
      traefik.http.routers.jellyfin.rule: Host(`jellyfin.hoebergen.net`)
    restart: always

  jellystat-db:
    container_name: jellystat-db
    image: postgres:15.12
    environment:
      - POSTGRES_DB=jfstat
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${JELLYSTAT_POSTGRES_PASSWORD}
    volumes:
      - ./jellystat/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  jellystat:
    container_name: jellystat
    image: cyfershepard/jellystat:1.1.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${JELLYSTAT_POSTGRES_PASSWORD}
      - POSTGRES_IP=jellystat-db
      - POSTGRES_PORT=5432
      - JWT_SECRET="${JELLYSTAT_JWT}"
    labels:
      traefik.enable: true
      traefik.http.routers.jellystat.entryPoints: websecure
      traefik.http.services.jellystat.loadbalancer.server.port: 3000
      traefik.http.routers.jellystat.rule: Host(`stats.jellyfin.hoebergen.net`)
      traefik.http.routers.jellystat.middlewares: localAccess@file
    volumes:
      - ./jellystat/backup-data:/app/backend/backup-data
    depends_on:
      - jellystat-db
      - jellyfin
    restart: unless-stopped

  jellyseerr:
    image: fallenbagel/jellyseerr:2.3.0
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=info
      - TZ=Europe/Amsterdam
    ports:
      - ${LOCAL_IP}:5055:5055
    volumes:
      - ./jellyseerr/config:/app/config
    labels:
      traefik.enable: true
      traefik.http.routers.jellyseerr.entryPoints: websecure
      traefik.http.services.jellyseerr.loadbalancer.server.port: 5055
      traefik.http.routers.jellyseerr.rule: Host(`request.hoebergen.net`)
    restart: unless-stopped
    depends_on:
      - jellyfin
      - radarr
      - sonarr

  radarr:
    image: lscr.io/linuxserver/radarr:5.19.3
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - ./radarr/config:/config
      - ${MOUNT_ROOT}:/data
    ports:
      - ${LOCAL_IP}:7878:7878
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entryPoints: websecure
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      traefik.http.routers.radarr.rule: Host(`radarr.hoebergen.net`)
      traefik.http.routers.radarr.middlewares: authentik@file,localAccess@file

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.13
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - ./sonarr/config:/config
      - ${MOUNT_ROOT}:/data
    ports:
      - ${LOCAL_IP}:8989:8989
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entryPoints: websecure
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      traefik.http.routers.sonarr.rule: Host(`sonarr.hoebergen.net`)
      traefik.http.routers.sonarr.middlewares: authentik@file,localAccess@file
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:1.5.1
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - ./bazarr/config:/config
      - ${MEDIA_ROOT}/movies:/movies
      - ${MEDIA_ROOT}/series:/series
    ports:
      - ${LOCAL_IP}:6767:6767
    labels:
      traefik.enable: true
      traefik.http.routers.bazarr.entryPoints: websecure
      traefik.http.services.bazarr.loadbalancer.server.port: 6767
      traefik.http.routers.bazarr.rule: Host(`bazarr.hoebergen.net`)
      traefik.http.routers.bazarr.middlewares: authentik@file,localAccess@file
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.31.2
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
    volumes:
      - ./prowlarr/config:/config
    ports:
      - ${LOCAL_IP}:9696:9696
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.entryPoints: websecure
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.hoebergen.net`)
      traefik.http.routers.prowlarr.middlewares: authentik@file,localAccess@file
    restart: unless-stopped

  qbittorrent:
    image: binhex/arch-qbittorrentvpn:5.0.4-3-01
    environment:
      - PGID=1000
      - PUID=1000
      - UMASK=000
      - WEBUI_PORT=8080
      - DEBUG=false
      - NAME_SERVERS=1.1.1.1
      - LAN_NETWORK=${LAN_NETWORK}
      - ENABLE_SOCKS=no
      - USERSPACE_WIREGUARD=no
      - STRICT_PORT_FORWARD=no
      - ENABLE_PRIVOXY=no
      - ENABLE_STARTUP_SCRIPTS=no
      - VPN_CLIENT=wireguard
      - VPN_PROV=pia
      - VPN_USER=${PIA_USER}
      - VPN_PASS=${PIA_PASSWORD}
      - VPN_ENABLED=yes
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - ./qbittorrent:/config
      - '${MOUNT_ROOT}/qbittorrent/downloads:/downloads'
    container_name: qbittorrent
    ports:
      - '58946:58946/udp'
      - '58946:58946'
    privileged: true
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.docker.network: vpn
      traefik.http.routers.qbittorrent.entryPoints: websecure
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080
      traefik.http.routers.qbittorrent.rule: Host(`qbittorrent.hoebergen.net`)
      traefik.http.routers.qbittorrent.middlewares: localAccess@file

  janitorr:
    container_name: janitorr
    image: ghcr.io/schaka/janitorr:native-stable
    user: 1000:1000
    volumes:
      - ./janitorr/application.yml:/workspace/application.yml
      - ./janitorr/appdata/janitorr/logs:/logs
      - ${MOUNT_ROOT}:/data

networks:
  default:
    name: frontend
    external: true
  vpn:
    name: vpn
    external: true
