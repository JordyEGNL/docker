name: Deploy Docker Compose via SSH

on:
  push:
    paths:
      - '**/docker-compose.yml'

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Write SSH private key to a file
    - name: Create SSH key file
      run: |
        mkdir -p ./temp/.ssh
        touch ./temp/.ssh/id_ed25519
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ./temp/.ssh/id_ed25519
        chmod 600 ./temp/.ssh/id_ed25519

    # Find all modified docker-compose.yml files
    - name: Find modified Docker Compose files
      id: find_files
      run: |
        # Zoek alle gewijzigde docker-compose.yml bestanden
        FILES=$(git diff --name-only ${{github.event.before}} ${{github.sha}} -- '**/docker-compose.yml')
        if [ -z "$FILES" ]; then
          echo "No Docker Compose files modified."
          exit 1
        fi
        echo "Modified files: $FILES"
        # Zet de bestanden als een enkele string, gescheiden door een komma
        FILES_COMMA_SEPARATED=$(echo "$FILES" | tr '\n' ',')
        echo "Comma separated files: $FILES_COMMA_SEPARATED"
        echo "::set-output name=files::$FILES_COMMA_SEPARATED"

    # Loop through each Docker Compose file, extract host and service, and deploy
    - name: Deploy to each host and service
      run: |
        # Zet de gewijzigde bestanden om in een array
        IFS=',' read -r -a FILE_ARRAY <<< "${{ steps.find_files.outputs.files }}"

        # Loop door alle bestanden in de array
        for FILE_PATH in "${FILE_ARRAY[@]}"; do
          # Extract the host and service from the file path
          HOST=$(echo $FILE_PATH | awk -F'/' '{print $1}')
          SERVICE=$(echo $FILE_PATH | awk -F'/' '{print $2}')
          echo " -- Deploying to host: $HOST, service: $SERVICE --"

          # Maak directory aan op de host en verplaats bestanden
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "mkdir -p ~/docker/$SERVICE"
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519" $FILE_PATH ${{ secrets.SSH_USER }}@$HOST:~/docker/$SERVICE/  

          # Update de docker compose stack
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "cd ~/docker/$SERVICE && docker compose pull && docker compose up -d --remove-orphans"
        done