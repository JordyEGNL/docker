name: Deploy Docker Compose via SSH

on:
  push:
    paths:
      - '**/docker-compose.yml'

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # checkout full tree
        fetch-depth: 0

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    # Write SSH private key to a file
    - name: Create SSH key file
      run: |
        mkdir -p ./temp/.ssh
        touch ./temp/.ssh/id_ed25519
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ./temp/.ssh/id_ed25519
        chmod 600 ./temp/.ssh/id_ed25519

    # Find all modified docker-compose.yml files
    - name: Find modified Docker Compose files
      id: find_files
      run: |
        # Zoek alle gewijzigde docker-compose.yml bestanden
        FILES=$(git diff --name-only ${{github.event.before}} ${{github.sha}} -- '**/docker-compose.yml')
        if [ -z "$FILES" ]; then
          echo "No Docker Compose files modified."
          exit 1
        fi
        echo "Modified files: $FILES"
        # Set the output as a JSON array (properly formatted for later use)
        FILES_JSON=$(echo "$FILES" | jq -R -s -c 'split("\n") | map(select(. != ""))')
        echo "::set-output name=files::$FILES_JSON"

    # Loop through each Docker Compose file, extract host and service, and deploy
    - name: Deploy to each host and service
      run: |

        # Parse the JSON array from the previous step
        FILES=${{ steps.find_files.outputs.files }}
        echo "Files: $FILES"

        # Convert JSON array into a bash array
        for FILE_PATH in $(echo $FILES | jq -r '.[]'); do
          # Extract the host and service from the file path
          HOST=$(echo $FILE_PATH | awk -F'/' '{print $1}')
          SERVICE=$(echo $FILE_PATH | awk -F'/' '{print $2}')
          echo "Deploying to host: $HOST, service: $SERVICE"

          # Maak directory aan op de host en verplaats bestand
          ssh -o StrictHostKeyChecking=no -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "mkdir -p ~/docker/$SERVICE"
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ./temp/.ssh/id_ed25519" ./$HOST/$SERVICE/docker-compose.yml ${{ secrets.SSH_USER }}@$HOST:~/docker/$SERVICE/docker-compose.yml
          # Optioneel: herstart Docker Compose service
          ssh -o StrictHostKeyChecking=no -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "cd ~/docker/$SERVICE && docker compose down && docker compose up -d"
        done