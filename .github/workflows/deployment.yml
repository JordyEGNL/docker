name: Deploy Docker Compose

on:
    push:
        branches:
            - main
        paths:
            - 'lab*/**'
            - 'str*/**'

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Write SSH private key to a file
    - name: Create SSH key file
      run: |
        mkdir -p ./temp/.ssh
        touch ./temp/.ssh/id_ed25519
        echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ./temp/.ssh/id_ed25519
        chmod 600 ./temp/.ssh/id_ed25519

    # Find all modified fils in the HOST directories
    - name: Find modified files
      id: find_files
      run: |
        # Search for changed files since the last commit
        FILES=$(git diff --name-only --diff-filter=d ${{github.event.before}} ${{github.sha}} -- 'lab*/**' 'str*/**')
        if [ -z "$FILES" ]; then
          echo "No file changes detected."
          exit 0
        fi
        echo "Modified files: $FILES"
        
        # Extract the first two directories from the file path
        # Because the whole service directory will get copied to the host
        # Before: "lab-vps-01/service1/docker-compose.yml"
        # After: "lab-vps-01/service1"
        FILES_COMMA_SEPARATED=$(echo "$FILES" | awk -F'/' '{print $1"/"$2}' | sort | uniq | tr '\n' ',' | sed 's/,$//')
        echo "Comma separated filtered files: $FILES_COMMA_SEPARATED"

        echo "files=$FILES_COMMA_SEPARATED" >> $GITHUB_OUTPUT

    # Loop through each Docker Compose file, extract host and service, and deploy
    - name: Deploy to each host and service
      run: |
        # Convert to an array to loop through
        IFS=',' read -r -a FILE_ARRAY <<< "${{ steps.find_files.outputs.files }}"

        # Loop through the array
        for FILE_PATH in "${FILE_ARRAY[@]}"; do
          # Extract the host and service from the file path
          HOST=$(echo $FILE_PATH | awk -F'/' '{print $1}')
          SERVICE=$(echo $FILE_PATH | awk -F'/' '{print $2}')
          echo " ✨ Deploying to host: $HOST, service: $SERVICE ✨"

          # Create the service directory on the host
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "mkdir -p ~/docker/$SERVICE"

          # Copy the service directory to the host
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519" $HOST/$SERVICE/ ${{ secrets.SSH_USER }}@$HOST:~/docker/$SERVICE

          # Check the contents of the service directory
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "cd ~/docker/$SERVICE && ls -la && pwd"

          # Update the Docker Compose stack
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ./temp/.ssh/id_ed25519 ${{ secrets.SSH_USER }}@$HOST "cd ~/docker/$SERVICE && docker compose pull && docker compose up -d --remove-orphans"
        done
