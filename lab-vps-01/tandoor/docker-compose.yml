services:
  db_recipes:
    container_name: tandoor-db
    restart: unless-stopped
    image: postgres:15-alpine
    volumes:
      - ./postgresql:/var/lib/postgresql/data
    env_file:
      - ./.env
    networks:
      - tandoor

  web_recipes:
    container_name: tandoor-web
    restart: unless-stopped
    image: vabene1111/recipes:1.5.34
    env_file:
      - ./.env
    volumes:
      - staticfiles:/opt/recipes/staticfiles
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/opt/recipes/nginx/conf.d
      - ./mediafiles:/opt/recipes/mediafiles
    depends_on:
      - db_recipes
    networks:
      - tandoor

  nginx_recipes:
    container_name: tandoor-proxy
    image: nginx:mainline-alpine
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      # Do not make this a bind mount, see https://docs.tandoor.dev/install/docker/#volumes-vs-bind-mounts
      - nginx_config:/etc/nginx/conf.d:ro
      - staticfiles:/static:ro
      - ./mediafiles:/media:ro
    labels: # traefik example labels
      traefik.enable: true
      traefik.http.routers.tandoor.entryPoints: websecure
      traefik.http.services.tandoor.loadbalancer.server.port: 80
      traefik.http.routers.tandoor.rule: Host(`recipes.hoebergen.net`)
    depends_on:
      - web_recipes
    networks:
      - tandoor
      - frontend

networks:
  tandoor:
  frontend:
    external: true

volumes:
  nginx_config:
  staticfiles:
