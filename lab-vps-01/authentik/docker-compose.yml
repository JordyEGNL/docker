services:
  postgresql:
    container_name: authentik-db
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - authentik
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-authentik}
      POSTGRES_DB: ${PG_DB:-authentik}
    env_file:
      - .env

  redis:
    container_name: authentik-redis
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - authentik
    volumes:
      - redis:/data

  server:
    container_name: authentik-server
    image: ghcr.io/goauthentik/server:2025.2.1
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_LOG_LEVEL: warning
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    networks:
      - authentik
      - frontend
    env_file:
      - .env
    ports:
      - "10.0.10.101:9000:9000"
      - "10.0.10.101:9443:9443"
    labels:
      traefik.enable: true
      traefik.http.routers.authentik.entryPoints: websecure
      traefik.http.services.authentik.loadbalancer.server.scheme: https
      traefik.http.services.authentik.loadbalancer.server.port: 9443
      traefik.http.routers.authentik.rule: Host(`auth.hoebergen.net`)
    depends_on:
      - postgresql
      - redis

  worker:
    container_name: authentik-worker
    image: ghcr.io/goauthentik/server:2025.2.1
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      AUTHENTIK_LOG_LEVEL: warning
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    networks:
      - authentik
    env_file:
      - .env
    depends_on:
      - postgresql
      - redis

volumes:
  redis:
    driver: local

networks:
  authentik:
  frontend:
    external: true
